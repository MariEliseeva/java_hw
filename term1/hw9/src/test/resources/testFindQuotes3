Предикаты:

Predicate.or и Predicate.and — принимают один предикат в качестве аргумента, возвращают предикат, который ведет себя, как дизъюнкция/конъюнкция текущего предиката и предиката-аргумента. Семантика ленивая, как у || и &&
Predicate.not принимает 0 аргументов, возвращает предикат-отрицание текущего предиката
Константные предикаты: Predicate.ALWAYS_TRUE и Predicate.ALWAYS_FALSE
Можно не поля, а методы

Отдельный класс Collections с методами:

map() — принимает f и a, применяет f к каждому элементу a_i и возвращает список [f(a_1), ..., f(a_n)]
filter() — принимает p и a, возвращает список, содержащий элементы a_i, на которых p(a_i) == true
takeWhile() — принимает p и a, возвращает список с началом a до первого элемента ai, для которого p(ai) == false
takeUnless() — то же, что и takeWhile, только для p(a_i) == true
foldr() / foldl() — принимает функцию двух аргументов, начальное значение и коллекцию, работает так: https://ru.wikipedia.org/wiki/%D0%A1%D0%B2%D1%91%D1%80%D1%82%D0%BA%D0%B0_%D1%81%D0%BF%D0%B8%D1%81%D0%BA%D0%B0
a – Iterable

Дедлайн – 7 ноября 23:59